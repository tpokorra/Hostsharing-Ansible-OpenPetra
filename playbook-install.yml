---
- hosts: openpetra
  vars:
    monoversion: 6.8.0.105
    ansible_python_interpreter: /usr/bin/python3
  tasks:

  #################################
  ## setup the user, the domain, the database
  #################################
  - name: ensure user exists
    hsuser.js: name="{{pac}}-{{user}}" password="{{password}}" exists="true"
  - name: setup domain
    hsdomain.js: name="{{domain}}" owner="{{pac}}-{{user}}" exists="true"
  - name: setup database
    hsdatabase.js: name="{{pac}}_{{user}}" password="{{password}}" instance="mysql" exists="true"

  - name: Sleep to avoid issue invalid user for temporary files
    pause:
      seconds: 10

  #################################
  ## create directories
  #################################
  - name: create directory var/tmp
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/tmp"
      state: directory
  - name: create directory var/log
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/log"
      state: directory
  - name: create directory var/run
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/var/run"
      state: directory
  - name: create directory etc/nginx.conf.d
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/etc/nginx.conf.d"
      state: directory
  - name: create directory bin
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/bin"
      state: directory
  - name: create directory .mono
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/.mono"
      state: directory
  - name: create directory openpetra
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/openpetra"
      state: directory
  - name: create etc directory for instance
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/{{OP_CUSTOMER}}/etc"
      state: directory
  - name: create tmp directory for instance
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/{{OP_CUSTOMER}}/tmp"
      state: directory
  - name: create log directory for instance
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      path: "/home/pacs/{{pac}}/users/{{user}}/{{OP_CUSTOMER}}/log"
      state: directory

  #################################
  ## upload files
  #################################
  - name: upload common.config
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/common.config" src="templates/common.config" mode=0600
  - name: upload fastcgi_params
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/fastcgi_params" src="templates/fastcgi_params" mode=0600
  - name: upload nginx.conf
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/nginx.conf" src="templates/nginx.conf" mode=0600
  - name: upload nginx start script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/start-nginx.sh" src="templates/start-nginx.sh" mode=0700
  - name: upload nginx stop script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/stop-nginx.sh" src="templates/stop-nginx.sh" mode=0700
  - name: upload openpetra start script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/start-openpetra.sh" src="templates/start-openpetra.sh" mode=0700
  - name: upload openpetra stop script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/stop-openpetra.sh" src="templates/stop-openpetra.sh" mode=0700
  - name: upload openpetra upgrade script
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/bin/upgrade-openpetra.sh" src="templates/upgrade-openpetra.sh" mode=0700
  - name: upload monit configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.monitrc" src="templates/monitrc" mode=0600
  - name: upload logrotate configuration
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.logrotate" src="templates/logrotate" mode=0600
  - name: upload profile
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/.profile" src="templates/profile" mode=0644

  #################################
  ## install mono
  #################################
  - name: install mono
    become: yes
    become_user: "{{pac}}-{{user}}"
    unarchive:
      creates: /home/pacs/{{pac}}/users/{{user}}/mono-{{monoversion}}
      src: https://download.solidcharity.com/tarballs/tpokorra/mono/mono-{{monoversion}}.bin.debian10.tar.gz
      remote_src: yes
      dest: /home/pacs/{{pac}}/users/{{user}}
  - name: create symbolic link for mono
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/home/pacs/{{pac}}/users/{{user}}/mono-{{monoversion}}"
      dest: "/home/pacs/{{pac}}/users/{{user}}/mono"
      state: link
  - name: install the certificates
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      source mono/env.sh
      cert-sync --user /etc/ssl/certs/ca-certificates.crt
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.config/.mono/certs"
  - name: copy mono config file
    become: yes
    become_user: "{{pac}}-{{user}}"
    copy:
      src: /home/pacs/{{pac}}/users/{{user}}/mono/etc/mono/config
      dest: /home/pacs/{{pac}}/users/{{user}}/.mono/config
      remote_src: yes
      force: no # do not overwrite if the file already exists
  - name: add configuration for libsodium
    become: yes
    become_user: "{{pac}}-{{user}}"
    lineinfile:
      path: "/home/pacs/{{pac}}/users/{{user}}/.mono/config"
      regexp: '.*dllmap dll="libsodium".*'
      line: '    <dllmap dll="libsodium" target="/usr/lib/x86_64-linux-gnu/libsodium.so.23" os="!windows"/>'
      insertbefore: '</configuration>'

  #################################
  ## download OpenPetra
  #################################
  - name: install openpetra
    become: yes
    become_user: "{{pac}}-{{user}}"
    unarchive:
      creates: /home/pacs/{{pac}}/users/{{user}}/openpetra/server/bin/version.txt
      src: https://get.openpetra.org/latest
      remote_src: yes
      extra_opts: [--strip-components=1] # to avoid the openpetra directory to contain the version number
      dest: /home/pacs/{{pac}}/users/{{user}}/openpetra
  - name: create symbolic link for libsodium
    become: yes
    become_user: "{{pac}}-{{user}}"
    file:
      src: "/usr/lib/x86_64-linux-gnu/libsodium.so.23"
      dest: "/home/pacs/{{pac}}/users/{{user}}/openpetra/server/bin/libsodium.so"
      state: link

  #####################################
  ## create configuration for instance
  #####################################
  - name: upload openpetra server config
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/{{OP_CUSTOMER}}/etc/PetraServerConsole.config" src="templates/PetraServerConsole.config" mode=0600
  - name: upload openpetra admin console config
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/{{OP_CUSTOMER}}/etc/PetraServerAdminConsole.config" src="templates/PetraServerAdminConsole.config" mode=0600
  - name: upload nginx instance config
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/etc/nginx.{{OP_CUSTOMER}}.conf" src="templates/nginx.op_instance.conf" mode=0600
  - name: upload apache instance .htaccess
    become: yes
    become_user: "{{pac}}-{{user}}"
    template: dest="/home/pacs/{{pac}}/users/{{user}}/doms/{{domain}}/htdocs-ssl/.htaccess" src="templates/htaccess" mode=0644

  #####################################
  ## initialise the database
  #####################################
  - name: initialise the database
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      source mono/env.sh
      export OP_CUSTOMER={{OP_CUSTOMER}}
      export DO_NOT_CREATE_DATABASE=yes
      openpetra/openpetra-server.sh initdb && touch .ansible.dbinitialised
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible.dbinitialised"

  #####################################
  ## download and install demo database
  #####################################
  - name: download demo database
    become: yes
    become_user: "{{pac}}-{{user}}"
    get_url:
      url: https://github.com/openpetra/demo-databases/raw/master/demoWith1ledger.yml.gz
      dest: "/home/pacs/{{pac}}/users/{{user}}/demoWith1ledger.yml.gz"
    when: with_demo_db

  - name: load the demo database
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      source mono/env.sh
      export OP_CUSTOMER={{OP_CUSTOMER}}
      openpetra/openpetra-server.sh loadYmlGz /home/pacs/{{pac}}/users/{{user}}/demoWith1ledger.yml.gz && touch .ansible.loadeddemodb
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible.loadeddemodb"
    when: with_demo_db

  - name: load the base database
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      source mono/env.sh
      export OP_CUSTOMER={{OP_CUSTOMER}}
      openpetra/openpetra-server.sh loadYmlGz /home/pacs/{{pac}}/users/{{user}}/openpetra/db/base.yml.gz && touch .ansible.loadedbasedb
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/.ansible.loadedbasedb"
    when: not with_demo_db

  ####################################
  ## install cron jobs
  ####################################
  - name: start monit as cronjob
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "start monit at reboot"
      special_time: reboot
      job: rm -f $HOME/var/run/* && /usr/bin/monit -c "$HOME/.monitrc"
  - name: run logrotate once a day
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "logrotate"
      minute: "22"
      hour: "1"
      job: "/usr/sbin/logrotate -s $HOME/.logrotate.state $HOME/.logrotate"
  - name: run OpenPetra reminders once at night
    become: yes
    become_user: "{{pac}}-{{user}}"
    cron:
      name: "OpenPetra reminders"
      minute: "27"
      hour: "1"
      job: "(source $HOME/mono/env.sh && $HOME/openpetra/openpetra-server.sh reminderAll) >/dev/null 2>&1"

  ##################################################
  ## start nginx and openpetra services via monit
  ##################################################
  - name: start monit
    become: yes
    become_user: "{{pac}}-{{user}}"
    shell: |
      /usr/bin/monit -c ".monitrc"
    args:
      executable: /bin/bash
      chdir: "/home/pacs/{{pac}}/users/{{user}}/"
      creates: "/home/pacs/{{pac}}/users/{{user}}/var/run/monit.id"
